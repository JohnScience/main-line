# syntax=docker/dockerfile:1
# check=skip=SecretsUsedInArgOrEnv

FROM main-line-rust_workspace AS rust-workspace

WORKDIR /main-line/rust

ARG POSTGRES_USER=tester
ARG POSTGRES_PASSWORD=tester
ARG POSTGRES_DB=tester
ARG POSTGRES_PORT=5432

# Set DATABASE_URL for sqlx
ENV DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:${POSTGRES_PORT}/${POSTGRES_DB}
ENV SQLX_OFFLINE=true

# Start Postgres temporarily and run migrations
RUN service postgresql start && \
    su - postgres -c "psql -c \"CREATE USER ${POSTGRES_USER} WITH PASSWORD '${POSTGRES_PASSWORD}';\"" && \
    su - postgres -c "createdb -O ${POSTGRES_USER} ${POSTGRES_DB}" && \
    # Apply migrations
    cargo sqlx migrate run --source ../migrations && \
    cd backend_lib && \
    # Generate the sqlx data
    cargo sqlx prepare --workspace -- --all-targets

RUN cargo build --release --target x86_64-unknown-linux-musl --package backend_lib

FROM rust-workspace AS backend-lib
