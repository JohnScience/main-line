x-database-env: &database-env
  POSTGRES_USER: tester
  POSTGRES_PASSWORD: tester
  POSTGRES_DB: tester

services:
  db:
    image: "postgres:17-alpine"
    ports:
      - 5432:5432
    env_file:
      - secrets/pg_config.env
    volumes:
      - ./dbdata:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB || exit 1",
        ]
      interval: 5s
      timeout: 3s
      retries: 10

  minio:
    image: "minio/minio"
    env_file:
      - secrets/minio_config.env
    volumes:
      - ./minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: minio server /data --console-address ":9001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 1s
      timeout: 1s
      retries: 20

  backend:
    build:
      context: ./
      dockerfile: Dockerfile.backend
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      BASE_FRONTEND_URL: http://localhost:3001
      RUST_LOG: "backend=trace"
      MINIO_HOST: minio
      MINIO_PORT: 9000
    env_file:
      - secrets/jwt_signing_key.env
      - secrets/pg_config.env
      - secrets/minio_config.env
      - secrets/minio_buckets.env
    ports:
      - "3000:3000"
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - db
    restart: unless-stopped

  frontend:
    build:
      context: ./
      dockerfile: Dockerfile.frontend
    ports:
      - "3001:3001"
    environment:
      BASE_API_URL: http://backend:3000
    depends_on:
      - backend
    restart: unless-stopped
